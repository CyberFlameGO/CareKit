{
  "abstract" : [
    {
      "text" : "Create tasks and schedules for patients and display them using a synchronized view",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "controller.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/com.apple.CareKit\/documentation\/CareKit"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/com.apple.CareKit\/documentation\/CareKit\/creating-and-displaying-tasks-for-a-patient"
  },
  "kind" : "article",
  "metadata" : {
    "modules" : [
      {
        "name" : "CareKit"
      }
    ],
    "role" : "article",
    "roleHeading" : "Article",
    "title" : "Creating and Displaying Tasks for a Patient"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "When creating an app using CareKit, you can create tasks, such as taking medication",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "or performing an exercise, for the user to complete. To create tasks for users, first",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "create a store, so your task data has a place to be persisted. You can then create",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "both simple and complex task schedules, so your users know when to perform their",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "tasks. You can then present the scheduled tasks to the user.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Create-a-Store",
          "level" : 3,
          "text" : "Create a Store",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Your first step is to create a store for your data. You instantiate your store with",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "a name. There’s no specific validation of this name, but it’s good practice to make",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "it distinctive. Use the reverse-url format bundle identifier of your app with a unique",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "name appended:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "import CareKit",
            "",
            "let storeName = \"com.mycompany.myapp.nausea\"",
            "let store = OCKStore(name: storeName) "
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "If you try to create a store with a name of an already-existing store, the ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKitStore\/OCKStore",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "initializer returns the existing store.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Create-a-Schedule",
          "level" : 3,
          "text" : "Create a Schedule",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "When you create a task, you have to provide a schedule so users know when they need",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "to complete the task. For a task like taking a medication, the schedule specifies",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "when the user should take that medication, for example at 11:00 am or after dinner.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "You build schedules by defining times, offsets from known times, and ranges across",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "times and dates that consists of at least one schedule element. A schedule element",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "represents a defined moment or range of moments.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "Calendar calculations are complex and depend on the user’s device settings",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "for time zone and calendar. Use the provided Calendar API for the Date and DateComponents",
                  "type" : "text"
                },
                {
                  "text" : " ",
                  "type" : "text"
                },
                {
                  "text" : "to simplify this.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "style" : "note",
          "type" : "aside"
        },
        {
          "inlineContent" : [
            {
              "text" : "You can build a schedule in a few simple steps. For example, the code below shows",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "how to create a schedule that occurs every day at 8:00 am, starting today. In the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "first line, ",
              "type" : "text"
            },
            {
              "code" : "Calendar",
              "type" : "codeVoice"
            },
            {
              "text" : " returns the first moment of today’s date based on the user’s",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "calendar. In the second line, you add 8 hours to it to create a date object at 8:00",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "am. Next, you create a schedule element, using today’s date at 8:00 am, and set it",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "to occur daily. In the last line, you create a schedule using the schedule element",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "you created in the line before.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let startOfDay = Calendar.current.startOfDay(for: Date())",
            "let atBreakfast = Calendar.current.date(byAdding: .hour, value: 8, to: startOfDay)!",
            "",
            "let dailyAtBreakfast = OCKScheduleElement(start: atBreakfast, end: nil, interval: DateComponents(day: 1))",
            "",
            "var schedule = OCKSchedule(composing: [dailyAtBreakfast])"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "It’s best practice to create your schedule using date objects initialized with the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "user’s calendar preference. There are a variety of calendars your user could be using,",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "each with different properties and nuances. Creating dates with the user’s calendar",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "preference ensures date calculations are made correctly.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Schedule-Multiple-Elements",
          "level" : 3,
          "text" : "Schedule Multiple Elements",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "If you need a schedule that’s more complex than listing once-a-day events, you can",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "build it by working with multiple schedule elements. The code below expands on the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "previous code example by creating an additional schedule element, that occurs every",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "other day at 12:00 pm. Finally, you create a schedule with the two schedule elements.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let startOfDay = Calendar.current.startOfDay(for: Date())",
            "let atBreakfast = Calendar.current.date(byAdding: .hour, value: 8, to: startOfDay)!",
            "",
            "let dailyAtBreakfast = OCKScheduleElement(start: atBreakfast, end: nil, interval: DateComponents(day: 1))",
            "",
            "let atLunch = Calendar.current.date(byAdding: .hour, value: 12, to: startOfDay)!",
            "",
            "let everyTwoDaysAtLunch = OCKScheduleElement(start: atLunch, end: nil,",
            "                               interval: DateComponents(day: 2))",
            "",
            "var schedule = OCKSchedule(composing: [dailyAtBreakfast, everyTwoDaysAtLunch])"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "anchor" : "Create-and-Save-Tasks-to-the-Store",
          "level" : 3,
          "text" : "Create and Save Tasks to the Store",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Once you’ve defined a schedule, use it to create a task. You create a task with an",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "identifier, title, care plan, and schedule. You can also provide instructions for",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the task as shown in the second line:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "var task = OCKTask(identifier: \"doxylamine\", title: \"Take Doxylamine\", carePlanID: nil, schedule: schedule)",
            "",
            "task.instructions = \"Take 25mg of doxylamine when you experience nausea.\""
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "Now, you can save your task to the store. You can also specify a function to handle",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the completion of the operation. The code below shows you how to save your task and",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the format of the parameters passed into the completion handler.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "store.addTasks([task], ",
            "  queue: DispatchQueue.main,",
            "               completion: { (result: (Result<[OCKTask], OCKStoreError>)) in",
            "                        switch result {",
            "                        case .failure(let error) :",
            "                            print(error.localizedDescription)",
            "                        case .success( _) :",
            "                            print(\"Success!\")",
            "                        }",
            "        })",
            ""
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "The completion handler is an instance of type ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKitStore\/OCKResultClosure",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ",",
              "type" : "text"
            },
            {
              "code" : " ",
              "type" : "codeVoice"
            },
            {
              "text" : "which passes as a parameter a result enum. The enum contains a different value based",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "on whether the enum is set to ",
              "type" : "text"
            },
            {
              "code" : ".success",
              "type" : "codeVoice"
            },
            {
              "text" : " or ",
              "type" : "text"
            },
            {
              "code" : ".failure",
              "type" : "codeVoice"
            },
            {
              "text" : ". When the enum is set to ",
              "type" : "text"
            },
            {
              "code" : ".success",
              "type" : "codeVoice"
            },
            {
              "text" : ",",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "it contains the objects sent to the store, and when it’s set to ",
              "type" : "text"
            },
            {
              "code" : ".failure",
              "type" : "codeVoice"
            },
            {
              "text" : ", it contains",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "an ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKitStore\/OCKStoreError",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Handle-Errors",
          "level" : 3,
          "text" : "Handle Errors",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "If interacting with the store returns an error, you can inspect the error to help",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "troubleshoot the problem and decide how to handle it.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "The returned error is an instance of ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKitStore\/OCKStoreError",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ", an enum that",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "contains a value and a localized description. The enum value will be one of the following:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "definition" : {
                "content" : [
                  {
                    "inlineContent" : [
                      {
                        "text" : "Occurs when a fetch fails.",
                        "type" : "text"
                      }
                    ],
                    "type" : "paragraph"
                  }
                ]
              },
              "term" : {
                "inlineContent" : [
                  {
                    "code" : "fetchFailed",
                    "type" : "codeVoice"
                  }
                ]
              }
            },
            {
              "definition" : {
                "content" : [
                  {
                    "inlineContent" : [
                      {
                        "text" : "Occurs when adding an entity fails.",
                        "type" : "text"
                      }
                    ],
                    "type" : "paragraph"
                  }
                ]
              },
              "term" : {
                "inlineContent" : [
                  {
                    "code" : "addFailed",
                    "type" : "codeVoice"
                  }
                ]
              }
            },
            {
              "definition" : {
                "content" : [
                  {
                    "inlineContent" : [
                      {
                        "text" : "Occurs when an update to an existing entity fails.",
                        "type" : "text"
                      }
                    ],
                    "type" : "paragraph"
                  }
                ]
              },
              "term" : {
                "inlineContent" : [
                  {
                    "code" : "updateFailed",
                    "type" : "codeVoice"
                  }
                ]
              }
            },
            {
              "definition" : {
                "content" : [
                  {
                    "inlineContent" : [
                      {
                        "text" : "Occurs when deleting an existing entity fails.",
                        "type" : "text"
                      }
                    ],
                    "type" : "paragraph"
                  }
                ]
              },
              "term" : {
                "inlineContent" : [
                  {
                    "code" : "deleteFailed",
                    "type" : "codeVoice"
                  }
                ]
              }
            },
            {
              "definition" : {
                "content" : [
                  {
                    "inlineContent" : [
                      {
                        "text" : "Occurs when an invalid value is provided.",
                        "type" : "text"
                      }
                    ],
                    "type" : "paragraph"
                  }
                ]
              },
              "term" : {
                "inlineContent" : [
                  {
                    "code" : "invalidValue",
                    "type" : "codeVoice"
                  }
                ]
              }
            },
            {
              "definition" : {
                "content" : [
                  {
                    "inlineContent" : [
                      {
                        "text" : "Occurs when an asynchronous action takes too long, intended for use by remote databases.",
                        "type" : "text"
                      }
                    ],
                    "type" : "paragraph"
                  }
                ]
              },
              "term" : {
                "inlineContent" : [
                  {
                    "code" : "timedOut",
                    "type" : "codeVoice"
                  }
                ]
              }
            }
          ],
          "type" : "termList"
        },
        {
          "inlineContent" : [
            {
              "text" : "Use this value to determine whether to retry the operation, inform the user, or handle",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the error some other way. To provide feedback to the user, you can present the localized",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "description to the user.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "For example, if you attempt to add an entity to the store that’s missing required",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "information, your app will return an error enum with the value of ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKitStore\/OCKStoreError\/invalidValue(reason:)",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ",",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "and the localized description of “OCKCDScheduleElement must have at least 1 non-zero",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "interval”.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Display-Scheduled-Tasks",
          "level" : 3,
          "text" : "Display Scheduled Tasks",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Once you have a store populated with tasks, you can display those tasks to the user.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "CareKit provides pre-built view controllers and a range of controls and views to",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "build your own UI layouts.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "The simplest way to present data to the user is to use the pre-built view controllers.The",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "code below builds on previous code listings, and shows how to present task data to",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the user using an ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKit\/OCKDailyTasksPageViewController",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "let manager = OCKSynchronizedStoreManager(wrapping: store)",
            "let careViewController = OCKDailyTasksPageViewController(storeManager: manager)",
            "self.present(careViewController, animated: true, completion: nil)"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "The ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKit\/OCKDailyTasksPageViewController",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " utilizes Combine to synchronize events",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "between the store and the UI. First, you create an ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKit\/OCKSynchronizedStoreManager",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : ",",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "which creates a wrapper around your store that listens for all activity in the store.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "In the second line, you create an ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKit\/OCKDailyTasksPageViewController",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " using",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the synchronized store manager. The synchronized store manager notifies the view",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "controllers views of changes to the store, and the UI updates automatically. In the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "last line, you present the view controller.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "The ",
              "type" : "text"
            },
            {
              "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKit\/OCKDailyTasksPageViewController",
              "isActive" : true,
              "type" : "reference"
            },
            {
              "text" : " displays a header, that contains",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "a weekly calendar, and a body, that includes a list of tasks scheduled for the currently",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "selected date.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "When a user selects a date in the calendar, the calendar shows all tasks scheduled",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "for that date. Since CareKit uses Combine, the synchronized store manager used to",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "initialize the view controller acts as a publisher. When the user taps to complete",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "a task, the outcome is saved in the store, and the store publishes this change to",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "all subscribers. Any objects that are subscribers, for example the completion ring",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "for that date, update their state automatically.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "You can use the many view controllers and views available in CareKit to customize",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "the UI appearance, or use your own.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/com.apple.CareKit\/documentation\/CareKit\/creating-schedules-for-tasks",
        "doc:\/\/com.apple.CareKit\/documentation\/CareKitStore\/OCKTask",
        "doc:\/\/com.apple.CareKit\/documentation\/CareKitStore\/OCKSchedule",
        "doc:\/\/com.apple.CareKit\/documentation\/CareKitStore\/OCKScheduleElement",
        "doc:\/\/com.apple.CareKit\/documentation\/CareKitStore\/OCKScheduleEvent",
        "doc:\/\/com.apple.CareKit\/documentation\/CareKitStore\/OCKEvent",
        "doc:\/\/com.apple.CareKit\/documentation\/CareKitStore\/OCKOutcome",
        "doc:\/\/com.apple.CareKit\/documentation\/CareKitStore\/OCKOutcomeValue"
      ],
      "title" : "Tasks and Outcomes"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/carekit\/creating-and-displaying-tasks-for-a-patient"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://com.apple.CareKit/documentation/CareKit": {
  "abstract" : [
    {
      "text" : "Create apps that help people better understand and manage their health.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKit",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "CareKit",
  "type" : "topic",
  "url" : "\/documentation\/carekit"
},
"doc://com.apple.CareKit/documentation/CareKit/OCKDailyTasksPageViewController": {
  "abstract" : [
    {
      "text" : "A view controller that displays a calendar page view controller in the header, and",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "a collection of tasks in the body.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OCKDailyTasksPageViewController"
    }
  ],
  "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKit\/OCKDailyTasksPageViewController",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OCKDailyTasksPageViewController"
    }
  ],
  "role" : "symbol",
  "title" : "OCKDailyTasksPageViewController",
  "type" : "topic",
  "url" : "\/documentation\/carekit\/ockdailytaskspageviewcontroller"
},
"doc://com.apple.CareKit/documentation/CareKit/OCKSynchronizedStoreManager": {
  "abstract" : [
    {
      "text" : "Provides synchronization to CareKit view controllers by setting itself as the store",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "delegate, and then listening in on the store’s activity.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OCKSynchronizedStoreManager"
    }
  ],
  "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKit\/OCKSynchronizedStoreManager",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OCKSynchronizedStoreManager"
    }
  ],
  "role" : "symbol",
  "title" : "OCKSynchronizedStoreManager",
  "type" : "topic",
  "url" : "\/documentation\/carekit\/ocksynchronizedstoremanager"
},
"doc://com.apple.CareKit/documentation/CareKit/creating-schedules-for-tasks": {
  "abstract" : [
    {
      "text" : "Create schedules for tasks using multiple schedule elements.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKit\/creating-schedules-for-tasks",
  "kind" : "article",
  "role" : "article",
  "title" : "Creating Schedules for Tasks",
  "type" : "topic",
  "url" : "\/documentation\/carekit\/creating-schedules-for-tasks"
},
"doc://com.apple.CareKit/documentation/CareKitStore/OCKEvent": {
  "abstract" : [
    {
      "text" : "An object that represents a single occasion on which a task is scheduled to occur.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OCKEvent"
    }
  ],
  "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKitStore\/OCKEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OCKEvent"
    }
  ],
  "role" : "symbol",
  "title" : "OCKEvent",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/ockevent"
},
"doc://com.apple.CareKit/documentation/CareKitStore/OCKOutcome": {
  "abstract" : [
    {
      "text" : "The result of an event that corresonds to a task.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OCKOutcome"
    }
  ],
  "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKitStore\/OCKOutcome",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OCKOutcome"
    }
  ],
  "role" : "symbol",
  "title" : "OCKOutcome",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/ockoutcome"
},
"doc://com.apple.CareKit/documentation/CareKitStore/OCKOutcomeValue": {
  "abstract" : [
    {
      "text" : "An object that represents a measurement that a user gives in response to a task.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OCKOutcomeValue"
    }
  ],
  "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKitStore\/OCKOutcomeValue",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OCKOutcomeValue"
    }
  ],
  "role" : "symbol",
  "title" : "OCKOutcomeValue",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/ockoutcomevalue"
},
"doc://com.apple.CareKit/documentation/CareKitStore/OCKResultClosure": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "typealias"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OCKResultClosure"
    }
  ],
  "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKitStore\/OCKResultClosure",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OCKResultClosure"
    }
  ],
  "role" : "symbol",
  "title" : "OCKResultClosure",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/ockresultclosure"
},
"doc://com.apple.CareKit/documentation/CareKitStore/OCKSchedule": {
  "abstract" : [
    {
      "text" : "A compositon of any number of other schedulable objects.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OCKSchedule"
    }
  ],
  "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKitStore\/OCKSchedule",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OCKSchedule"
    }
  ],
  "role" : "symbol",
  "title" : "OCKSchedule",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/ockschedule"
},
"doc://com.apple.CareKit/documentation/CareKitStore/OCKScheduleElement": {
  "abstract" : [
    {
      "text" : "An object that represents a single event that repeats at fixed intervals.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OCKScheduleElement"
    }
  ],
  "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKitStore\/OCKScheduleElement",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OCKScheduleElement"
    }
  ],
  "role" : "symbol",
  "title" : "OCKScheduleElement",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/ockscheduleelement"
},
"doc://com.apple.CareKit/documentation/CareKitStore/OCKScheduleEvent": {
  "abstract" : [
    {
      "text" : "The schedule event for the task occurrence.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OCKScheduleEvent"
    }
  ],
  "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKitStore\/OCKScheduleEvent",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OCKScheduleEvent"
    }
  ],
  "role" : "symbol",
  "title" : "OCKScheduleEvent",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/ockscheduleevent"
},
"doc://com.apple.CareKit/documentation/CareKitStore/OCKStore": {
  "abstract" : [
    {
      "text" : "The database where you store all CareKit data.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OCKStore"
    }
  ],
  "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKitStore\/OCKStore",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OCKStore"
    }
  ],
  "role" : "symbol",
  "title" : "OCKStore",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/ockstore"
},
"doc://com.apple.CareKit/documentation/CareKitStore/OCKStoreError": {
  "abstract" : [
    {
      "text" : "The errors the store emits when there is problem during a transaction.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OCKStoreError"
    }
  ],
  "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKitStore\/OCKStoreError",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OCKStoreError"
    }
  ],
  "role" : "symbol",
  "title" : "OCKStoreError",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/ockstoreerror"
},
"doc://com.apple.CareKit/documentation/CareKitStore/OCKStoreError/invalidValue(reason:)": {
  "abstract" : [
    {
      "text" : "A case that occurs when you provide an invalid value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "invalidValue"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "reason"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKitStore\/OCKStoreError\/invalidValue(reason:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "OCKStoreError.invalidValue(reason:)",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/ockstoreerror\/invalidvalue(reason:)"
},
"doc://com.apple.CareKit/documentation/CareKitStore/OCKTask": {
  "abstract" : [
    {
      "text" : "An object that represents some task or action a patient needs to perform.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "OCKTask"
    }
  ],
  "identifier" : "doc:\/\/com.apple.CareKit\/documentation\/CareKitStore\/OCKTask",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "OCKTask"
    }
  ],
  "role" : "symbol",
  "title" : "OCKTask",
  "type" : "topic",
  "url" : "\/documentation\/carekitstore\/ocktask"
}
}
}